class Solution {
public:
int getLength(ListNode* head) {
         ListNode* prev = NULL;
        ListNode* curr = head;
        ListNode* nextptr;
        int len = 0;
        ListNode* temp = curr;
        while(temp != NULL) {
                temp = temp -> next; 
                len++;
        }
        return len;
}
    ListNode* reverseKGroup(ListNode* head, int k) {
         if(head==NULL){
            return NULL;
        }
        
        ListNode* prev = NULL;
        ListNode* curr = head;
        ListNode* nextptr;
    
        int cnt = 0;
        int x=getLength(head);

        if(x >= k){
        
        while(curr!=NULL && cnt<k){
            nextptr = curr->next;
            curr->next = prev;
            prev = curr;
            curr = nextptr;
            cnt++;
            }
        }
        else{
            return head; // yha aise socha as k > element then smj aa jayega ki why return head
        }
        
        if(nextptr != NULL){
            head->next = reverseKGroup(nextptr,k);
        }
        
        return prev;
    }
};
