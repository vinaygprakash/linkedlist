class Solution {
public:
 ListNode* reverseList(ListNode* head) {
        ListNode* prev=NULL;
        ListNode* curr=head;
        while(curr!=NULL){
            ListNode* temp=curr->next;
            curr->next=prev;
            prev=curr;
            curr=temp;
            
        }
        return prev;
    }
       ListNode* middleNode(ListNode* head) {
        if(head==NULL){
            return 0;
        }
        if(head->next==NULL){
            return head;
        }
        ListNode* slow=head;
        ListNode* fast=head;
        while(fast->next!=NULL){
            fast=fast->next;
            slow=slow->next;
            if(fast->next!=NULL){
                fast=fast->next;
            }

        }
        return slow;
        
    }



    bool isPalindrome(ListNode* head) {
        
        ListNode* temp1=head;
        ListNode* ptr=middleNode(head);
        ListNode* temp2=reverseList(ptr); // ye pe ptr pass hoga as hum ptr se start krenge reverse krna
        while(temp1!=NULL && temp2!=NULL){
            if(temp1->val!=temp2->val){
                return false;
            }
            else{
                temp1=temp1->next;
                temp2=temp2->next;
            }
        }
        return true;

        
       
        
    }
};
