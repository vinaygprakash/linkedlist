// USING RECURSION
**************************************************************************************************************************
class Solution
{
    public:
    
    struct Node* reverseLL(struct Node*prev,struct Node*curr){
       
        
        //base case
        if(curr==NULL){
            return prev;
        }
        else{
            Node*forward=curr->next;
            curr->next=prev;
            
            reverseLL(curr,forward);    
        } 
    }
    //Function to reverse a linked list.
    struct Node* reverseList(struct Node *head)
    {
        
        Node*prev=NULL;
        Node*curr=head;
        
        reverseLL(prev,curr);
    }    
};
***************************************************************************************************************************
USING ITERATIVE
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* prev=NULL;
        ListNode* curr=head;
        while(curr!=NULL){
            ListNode* temp=curr->next;
            curr->next=prev;
            prev=curr;
            curr=temp;     
        }
        return prev;
    }
};
****************************************************************************************************************************
