#include <iostream>
using namespace std;

class Node{
    public:
    int data;
    Node* prev;
    Node* next;


    Node(int d){
      this->data=d;
      this->prev=NULL;
      this->next=NULL;
    }
  ~Node(){
    int val=this->data;
    if(this->next!=NULL){
      delete next;
      this->next=NULL;

    }
    cout << "Memory is free for Node: " << val << endl;

  }
};



void print(Node* &head){
  Node* temp=head;
  while(temp!=NULL){
    cout << temp->data<< " ";
    temp=temp->next;
    
  }
  cout << endl; 
}

int getLength(Node* &head){
  int cnt=0;
  Node* temp=head;
  while(temp!=NULL){
    cnt++;
    temp=temp->next;
   
  }
  return cnt;
 
}

void inserAthead(Node* &head,Node* &tail, int d){

  if(head==NULL){
    Node* temp=new Node(d);
    head=temp;
    tail=temp;
 
  }
  else{
      Node* temp=new Node(d);
      temp->next=head;
      head->prev=temp;
      head=temp; 
    
  }
     
}

void inserAtTail(Node* &tail,Node* &head, int d){

  if(tail==NULL){
    Node* temp=new Node(d);
    tail=temp;
    head=temp;

  }
  else{
      Node* temp=new Node(d);
      tail->next=temp;
      temp->prev=tail;
      tail=temp;
    
  }

}
void insertAtposition(Node* &head,Node* &tail, int pos,int d){
  Node* temp=new Node(d);

  if(pos==1){
    inserAthead(head,tail,d);
    return; // isko likha karo
    
  }

  if(temp->next==NULL){

    inserAtTail(tail,head,d);
    return; // isko,likha kro
    
    
  }
  else{
     Node* curr=head;
  int cnt=1;
  while(cnt < pos-1){
    curr=curr->next;
    cnt++; 
  }
  temp->next=curr->next;
  curr->next->prev=temp;
  curr->next=temp;
  temp->prev=curr;
    
  }

}
void deleteNode(Node* &head, int pos){
  // if position is 1
      if(pos==1){
    
        Node* temp=head;
        temp->next->prev=NULL;
        head=temp->next;
        temp->next=NULL;
        delete temp;
 
  }
  // if any position is other than 1 It is applicable for any postion whether it is in last or other except 1
  else{
        Node* backward=head;
        Node* curr=head;
        int cnt=1;
        while(cnt < pos-1){
           backward=backward->next;
           cnt++; // It is very important
        }
          curr=backward->next;
    
          backward->next=curr->next;
         // curr->next->prev=backward; // last wala delte ke liye  ye NULL access kr rha hai to problem ho rha hai
          curr->next=NULL;
          curr->prev=NULL;
          delete curr;
          // curr->prev=NULL;
          // backward->next=curr->next;
          // curr->next=NULL;
          // delete curr;
        
    
      }
  
    
  

  
}


int main() {


  // Node* node1=new Node(10);
  // Node* head=node1;
  // Node* tail=node1;
  Node*head=NULL;
  Node*tail=NULL;

  // print(head);
  // int x=getLength(head);
  // cout << "Length of linked list is: " << x << endl;
  inserAthead(head,tail,20);
  print(head);
  inserAthead(head,tail,30);
  print(head);
  inserAthead(head,tail,40);
  print(head);
  // inserAtTail(tail,head,5);
  // print(head);
  // insertAtposition(head,tail,5,69);
  // print(head);

  deleteNode(head,3);
  print(head);
  




  return 0;
}
